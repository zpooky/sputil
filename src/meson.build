sputil_src = files([
  'heap/binary.cpp',
  'np/sudoku.cpp',
  'np/knights_tour.cpp',
  'np/longest_palindromic_substring.cpp',
  'np/subset_sum.cpp',
  'np/nqueens.cpp',
  'np/knapsack.cpp',
  'queue/Queue.cpp',
  'list/LinkedList.cpp',
  'list/SkipList.cpp',
  'list/FixedList.cpp',
  'os/stack.cpp',
  'util/Bitset.cpp',
  'util/subsets.cpp',
  'util/Matrix.cpp',
  'util/combinations.cpp',
  'util/numeric.cpp',
  'util/timeout.cpp',
  'util/array.cpp',
  'util/assert.cpp',
  'util/QuadSet.cpp',
  'util/conversions.cpp',
  'util/Timer.cpp',
  'util/Bloomfilter.cpp',
  'util/permutation.cpp',
  'encode/hex.cpp',
  'io/fd.cpp',
  'io/file.cpp',
  'io/path.cpp',
  'stack/Stack.cpp',
  'stack/DynamicStack.cpp',
  'buffer/CircularByteBuffer.cpp',
  'buffer/Sink.cpp',
  'buffer/Thing.cpp',
  'buffer/BytesView.cpp',
  'buffer/CircularBuffer.cpp',
  'sort/selectionsort.cpp',
  'sort/util.cpp',
  'sort/insertionsort.cpp',
  'sort/mergesort.cpp',
  'sort/heapsort.cpp',
  'sort/introsort.cpp',
  'sort/quicksort.cpp',
  'prng/util.cpp',
  'prng/URandom.cpp',
  'prng/xorshift.cpp',
  'hash/fnv.cpp',
  'hash/util.cpp',
  'hash/standard.cpp',
  'hash/crc.cpp',
  'hash/djb2.cpp',
  'hash/RabinKarpHash.cpp',
  'string/boyer_moore_horspool_search.cpp',
  'string/knuth_morris_pratt_search.cpp',
  'string/levenshtein.cpp',
  'string/boyer_moore_search.cpp',
  'string/rabin_karp_search.cpp',
  'string/view.cpp',
  'string/ascii.cpp',
  'string/naive_search.cpp',
  'problem/misc_problem.cpp',
  'problem/fibonacci.cpp',
  'problem/bits_problem.cpp',
  'problem/list_problem.cpp',
  'problem/string_problem.cpp',
  'problem/tower_of_hanoi.cpp',
  'trie/Trie.cpp',
  'graph/graph.cpp',
  'graph/Graph.cpp',
  'graph/Undirected.cpp',
  'graph/Dijkstra.cpp',
  'graph/graph2.cpp',
  'graph/ColoringGreedy.cpp',
  'tree/bst_extra.cpp',
  'tree/tree.cpp',
  'tree/avl.cpp',
  'tree/StaticTree.cpp',
  'tree/bst.cpp',
  'tree/red-black.cpp',
  'tree/btree.cpp',
  'tree/btree_rec.cpp',
  'tree/avl_rec.cpp',
  'map/ProbingHashMap.cpp',
  'map/HashSetProbing.cpp',
  'map/HashMapProbing.cpp',
  'map/HashSetTree.cpp',
  'map/HashSetOpen.cpp',
  'map/HashMapTree.cpp',
  'concurrent/ReadWriteLock.cpp',
  'concurrent/Barrier.cpp',
  'collection/Array.cpp'
])

