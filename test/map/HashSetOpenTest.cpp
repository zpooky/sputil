#include <gtest/gtest.h>
#include <map/HashSetOpen.h>

TEST(HashSetOpenTest, test) {
  sp::HashSetOpen<int> set;
  ASSERT_FALSE(lookup(set, 1));
  int *one = insert(set, 1);
  ASSERT_TRUE(one);
  ASSERT_EQ(*one, 1);
  {
    int *l_one = lookup(set, 1);
    ASSERT_TRUE(l_one);
    ASSERT_EQ(one, l_one);
    ASSERT_EQ(*l_one, 1);
  }

  int two_in = 2;
  ASSERT_FALSE(lookup(set, two_in));
  ASSERT_EQ(two_in, 2);
  ASSERT_FALSE(lookup(set, 2));

  int *two = insert(set, two_in);
  ASSERT_TRUE(two);
  ASSERT_EQ(*two, 2);
  {
    int two_l_in = 2;
    int *l_two = lookup(set, two_l_in);
    ASSERT_TRUE(l_two);
    ASSERT_EQ(two, l_two);
    ASSERT_EQ(*l_two, 2);
  }

  const int three_in = 3;
  ASSERT_FALSE(lookup(set, three_in));
  ASSERT_FALSE(lookup(set, 3));

  int *three = insert(set, three_in);
  ASSERT_TRUE(three);
  ASSERT_EQ(*three, 3);
  {
    const int three_l_in = 3;
    int *l_three = lookup(set, three_l_in);
    ASSERT_TRUE(l_three);
    ASSERT_EQ(three, l_three);
    ASSERT_EQ(*l_three, 3);
  }
}
